-- Enable citext extension
CREATE EXTENSION IF NOT EXISTS citext;

-- Create categories table
CREATE TABLE "categories"
(
    "category_id"      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "category_name"    CITEXT     NOT NULL,
    "parent_id"        INTEGER,
    "language"         VARCHAR(3) NOT NULL,
    "attribute_schema" jsonb     DEFAULT '{}',
    "created_at"       TIMESTAMP DEFAULT now(),
    "active"           BOOLEAN      DEFAULT true,
    "updated_at"       TIMESTAMP DEFAULT now(),
    "deleted_at"       TIMESTAMP
);

-- Add foreign key constraints for categories table
ALTER TABLE "categories"
    ADD FOREIGN KEY ("parent_id") REFERENCES "categories" ("category_id") ON DELETE SET NULL;

-- Create indexes for categories table
CREATE INDEX idx_categories_deleted_at ON categories (deleted_at) WHERE deleted_at IS NULL;
CREATE UNIQUE INDEX idx_categories_name_parent_lang ON categories (category_name, parent_id, language) WHERE deleted_at IS NULL;
CREATE UNIQUE INDEX idx_categories_languages ON categories (category_name, language) WHERE parent_id IS NULL AND deleted_at IS NULL;
CREATE INDEX idx_categories_name_search ON categories USING GIN (to_tsvector('simple', category_name));
CREATE INDEX idx_categories_language ON categories (language);

-- Add table comments for categories
COMMENT ON TABLE categories IS 'Таблица для хранения категорий товаров';
COMMENT ON COLUMN categories.category_name IS 'Название категории (case-insensitive)';
COMMENT ON COLUMN categories.parent_id IS 'Родительская категория, NULL для корневых категорий';
COMMENT ON COLUMN categories.language IS 'Язык категории (2-3 символа)';
COMMENT ON COLUMN categories.attribute_schema IS 'Дополнительные атрибуты категории в формате JSON';

-- Function for updating updated_at field for triggers
CREATE OR REPLACE FUNCTION update_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = now();
RETURN NEW;
END;
$$
language 'plpgsql';

-- Trigger for updating updated_at field in categories
CREATE TRIGGER update_categories_timestamp
    BEFORE UPDATE ON categories
    FOR EACH ROW EXECUTE FUNCTION update_timestamp();

-- Create products table
CREATE TABLE "products"
(
    "product_id"  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "price"       DECIMAL(12, 2) CHECK (price >= 0),
    "currency"    VARCHAR(3) DEFAULT 'TJS',
    "category_id" INTEGER,
    "user_id"     INTEGER NOT NULL,
    "created_at"  TIMESTAMP DEFAULT now(),
    "active"      BOOLEAN          DEFAULT true,
    "updated_at"  TIMESTAMP DEFAULT now(),
    "deleted_at"  TIMESTAMP
);

-- Adding foreign keys for products
ALTER TABLE "products"
    ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("category_id") ON DELETE SET NULL;

-- Creating indexes for products
CREATE INDEX idx_products_active ON products (active);
CREATE INDEX idx_products_category ON products(category_id) WHERE active = true;
CREATE INDEX idx_products_user ON products(user_id);

-- Trigger for updating updated_at field in products
CREATE TRIGGER update_products_timestamp
    BEFORE UPDATE ON products
    FOR EACH ROW EXECUTE FUNCTION update_timestamp();

-- Creating product_translations table for products translations
CREATE TABLE "product_translations"
(
    "translation_id"      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "product_id"          INTEGER    NOT NULL,
    "language"            VARCHAR(3) NOT NULL,
    "product_name"        CITEXT     NOT NULL,
    "product_description" TEXT,
    "attributes"          jsonb      DEFAULT '{}',
    "created_at"          TIMESTAMP DEFAULT now(),
    "updated_at"          TIMESTAMP DEFAULT now(),
    "deleted_at"          TIMESTAMP
);

-- Adding foreign key for product_translations
ALTER TABLE "product_translations"
    ADD FOREIGN KEY ("product_id") REFERENCES "products" ("product_id") ON DELETE CASCADE;

-- Creating indexes for product_translations
CREATE UNIQUE INDEX idx_product_id_language ON product_translations (product_id, language) WHERE deleted_at IS NULL;
CREATE INDEX idx_product_translations_search ON product_translations
    USING GIN (to_tsvector('simple', product_name || ' ' || coalesce(product_description, '')));
CREATE INDEX idx_products_language ON product_translations (language);
CREATE INDEX idx_product_translations_attributes ON product_translations USING GIN (attributes jsonb_path_ops);

-- Trigger for updating updated_at field in product_translations
CREATE TRIGGER update_products_translation_timestamp
    BEFORE UPDATE ON product_translations
    FOR EACH ROW EXECUTE FUNCTION update_timestamp();

COMMENT ON TABLE products IS 'Основная информация о продуктах маркетплейса';
COMMENT ON COLUMN products.currency IS 'Валюта цены по стандарту ISO 4217';
COMMENT ON COLUMN products.active IS 'Флаг активности товара (true - доступен для продажи)';

COMMENT ON TABLE product_translations IS 'Локализованные данные продуктов';
COMMENT ON COLUMN product_translations.attributes IS 'Дополнительные атрибуты продукта, специфичные для языка';
COMMENT ON COLUMN product_translations.language IS 'Код языка по стандарту ISO 639';