Хранить цену в базовой валюте и кэшировать пересчитанные цены в других валютах (например, в отдельной таблице или в кэше типа Redis).
Будущие таблицы для корзины:
CREATE TABLE orders (
    order_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id integer NOT NULL,
    total_price decimal(12,2) NOT NULL CHECK (total_price >= 0),
    currency varchar(3) DEFAULT 'USD',
    status varchar NOT NULL, -- Например, 'pending', 'completed', 'cancelled'
    created_at timestamp DEFAULT now(),
    updated_at timestamp DEFAULT now(),
    deleted_at timestamp,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE RESTRICT
);

CREATE TABLE order_items (
    order_item_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id integer NOT NULL,
    product_id integer NOT NULL,
    variant_id integer,
    quantity integer NOT NULL CHECK (quantity > 0),
    price decimal(12,2) NOT NULL CHECK (price >= 0),
    created_at timestamp DEFAULT now(),
    FOREIGN KEY (order_id) REFERENCES orders (order_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products (product_id) ON DELETE RESTRICT,
    FOREIGN KEY (variant_id) REFERENCES product_variants (variant_id) ON DELETE SET NULL
);

CREATE TABLE cart (
    cart_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id integer NOT NULL,
    product_id integer NOT NULL,
    variant_id integer,
    quantity integer NOT NULL CHECK (quantity > 0),
    created_at timestamp DEFAULT now(),
    updated_at timestamp DEFAULT now(),
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products (product_id) ON DELETE CASCADE,
    FOREIGN KEY (variant_id) REFERENCES product_variants (variant_id) ON DELETE SET NULL
);

CREATE TABLE reviews (
    review_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id integer NOT NULL,
    user_id integer NOT NULL,
    rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
    comment text,
    created_at timestamp DEFAULT now(),
    updated_at timestamp DEFAULT now(),
    active bool
    deleted_at timestamp,
    FOREIGN KEY (product_id) REFERENCES products (product_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE RESTRICT
);